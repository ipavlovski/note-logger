generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model Node {
    id Int @id @default(autoincrement())

    pid      Int?
    parent   Node?  @relation("NodeChain", fields: [pid], references: [id], onDelete: Cascade)
    children Node[] @relation("NodeChain")

    uri   String
    title String

    iconId Int
    icon   Icon? @relation(fields: [iconId], references: [id])

    order     Int      @default(0)
    updatedAt DateTime @updatedAt

    categoryId Int
    category   Cat?   @relation(fields: [categoryId], references: [id])
    tags       Tag[]
    meta       Meta[]
    leafs      Leaf[]

    @@unique([pid, uri], name: "pid_uri")
}

model Cat {
    id     Int    @id @default(autoincrement())
    name   String
    pid    Int?
    parent Cat?   @relation("CatChain", fields: [pid], references: [id])
    child  Cat[]  @relation("CatChain")
    node   Node[]
    colour String @default("#1f1f1f")

    @@unique([pid, name], name: "cat_chain")
}

model Tag {
    id     Int    @id @default(autoincrement())
    name   String
    pid    Int?   @unique
    parent Tag?   @relation("TagChain", fields: [pid], references: [id])
    child  Tag?   @relation("TagChain")
    node   Node[]
    colour String @default("#1f1f1f")

    @@unique([pid, name], name: "tag_chain")
}

// key, value, type - type is Number/String/Boolean of the 'value'
model Meta {
    id      Int    @id @default(autoincrement())
    node_id Int
    key     String
    value   String
    type    String
    node    Node   @relation(fields: [node_id], references: [id])

    @@unique([node_id, key], name: "meta_key")
}

model Leaf {
    id        Int      @id @default(autoincrement())
    node_id   Int
    node      Node     @relation(fields: [node_id], references: [id])
    createdAt DateTime @default(now())
    archived  Boolean  @default(false)
    media     Image[]

    updatedAt DateTime @updatedAt
    order     Int      @default(0)

    type    String // meta, text, link
    content String

    linking  LinkedLeaf?  @relation("linking")
    linkedBy LinkedLeaf[] @relation("linked-by")

}

model LinkedLeaf {
    linking    Leaf @relation("linking", fields: [linkingId], references: [id])
    linkingId  Int  @unique
    linkedBy   Leaf @relation("linked-by", fields: [linkedById], references: [id])
    linkedById Int

    @@id([linkingId, linkedById])
}

model Image {
    id      Int   @id @default(autoincrement())
    leaf_id Int
    leaf    Leaf? @relation(fields: [leaf_id], references: [id])

    path      String
    source    String?
    createdAt DateTime @default(now())

    updatedAt DateTime @updatedAt
    order     Int      @default(0)

    @@unique([leaf_id, path], name: "image_path")
}

model Icon {
    id   Int    @id @default(autoincrement())
    node Node[]

    path      String
    source    String?
    createdAt DateTime @default(now())
}
